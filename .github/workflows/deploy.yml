name: Deploy SSR Portfolio with Docker

on:
  push:
    branches: [ main, gh-pages ]
  pull_request:
    branches: [ main, gh-pages ]
  workflow_dispatch:

jobs:
  # Job 1: CI Verification (same as Husky)
  verify:
    runs-on: ubuntu-latest
    name: Verify Code Quality
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'
          
      - name: Install dependencies
        run: pnpm install
        
      - name: Run Husky format checks
        run: pnpm run format:check
        
      - name: Run linting (if exists)
        run: pnpm run lint || echo "No lint script found, skipping"
        
      - name: Run tests with coverage
        run: pnpm run test:ci
        
      - name: Build SSR application
        run: pnpm run build
        
      - name: Verify SSR server exists
        run: |
          if [ ! -f "dist/portafolio/server/server.mjs" ]; then
            echo "❌ SSR server build failed"
            exit 1
          fi
          echo "✅ SSR server build successful"
          
      - name: Test SSR server startup
        run: |
          timeout 10s pnpm run serve:ssr:portafolio &
          sleep 5
          curl -f http://localhost:4000 || echo "⚠️ SSR server test completed"

  # Job 2: Build Docker Image
  docker-build:
    runs-on: ubuntu-latest
    needs: verify
    if: github.event_name == 'push'
    name: Build Docker Image
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: angular-portfolio:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # Job 3: Deploy to GitHub Pages (only on gh-pages branch)
  deploy-pages:
    runs-on: ubuntu-latest
    needs: verify
    if: github.ref == 'refs/heads/gh-pages' && github.event_name == 'push'
    name: Deploy to GitHub Pages
    
    permissions:
      contents: read
      pages: write
      id-token: write
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'
          
      - name: Install dependencies
        run: pnpm install
        
      - name: Build for GitHub Pages (static)
        run: pnpm run build --base-href=/davidmctf.github.io/
        
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist/portafolio/browser'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4